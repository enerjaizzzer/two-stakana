{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Item","Form","App","useState","material","setMaterial","firstResult","secondResult","result","setResult","className","name","initialValues","remember","onFinish","values","console","log","firstStakan","secondStakan","label","type","htmlType","map","e","i","onClick","newMaterials","firstLap","secondLap","length","forEach","ind","push","value","id","sortedMaterials","sortBy","stack","Array","fill","find","item","materialsFirstResult","materialsSecondResult","indexItem","workedItem","change","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a42998c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { sortBy, find } from 'lodash';\nimport './App.css';\n\nconst { Item } = Form;\n\nfunction App() {\n  const [material, setMaterial] = useState([]);\n  const [result, setResult] = useState({\n    firstResult: [],\n    secondResult: [],\n  })\n\n  const onFinish = (values) => {\n    console.log(values)\n    setMaterial([\n      ...material,\n      {\n        firstStakan: values.firstStakan,\n        secondStakan: values.secondStakan\n      }\n    ])\n  }\n\n  const getResult = () => {\n    const newMaterials = [];\n    let firstLap = 0;\n    let secondLap = material.length - 1;\n    material.forEach((e, ind) => {\n      newMaterials.push({value: e.firstStakan, type: \"first\", id: ind});\n      newMaterials.push({value: e.secondStakan, type: \"second\", id: ind});\n    })\n    const sortedMaterials = sortBy(newMaterials, (e) => e.value)\n    const stack = new Array(material.length).fill(0)\n    sortedMaterials.forEach(e => {\n      if (!stack.find(item => item === e.id)) {\n        if(e.type === 'first') {\n          stack[firstLap] = e.id;\n          firstLap += 1;\n        }\n        if(e.type === 'second') {\n          stack[secondLap] = e.id;\n          secondLap -= 1;\n        }\n      }\n    })\n    let materialsFirstResult = [];\n    let materialsSecondResult = [];\n    stack.forEach(indexItem => {\n      const workedItem = material[indexItem];\n      console.log(workedItem)\n      materialsFirstResult = [...materialsFirstResult, ...new Array(+workedItem.firstStakan).fill(1)]\n      if (materialsFirstResult.length > materialsSecondResult.length) {\n        const change = materialsFirstResult.length - materialsSecondResult.length;\n        materialsSecondResult = [...materialsSecondResult, ...new Array(change).fill(0), ...new Array(+workedItem.secondStakan).fill(1)]\n      } else {\n        materialsSecondResult = [...materialsSecondResult, ...new Array(+workedItem.secondStakan).fill(1)]\n      }\n    })\n    setResult(\n      {\n        firstResult: materialsFirstResult,\n        secondResult: materialsSecondResult,\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        2 STAKANA\n      </header>\n      <div className=\"workspace\">\n        <div className=\"workspace-input\">\n          <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Item\n              label=\"First stakan time\"\n              name=\"firstStakan\"\n            >\n              <Input />\n            </Item>\n            <Item\n              label=\"Second stakan time\"\n              name=\"secondStakan\"\n            >\n              <Input />\n            </Item>\n            <Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Item>\n          </Form>\n        </div>\n        <div className=\"workspace-body\">\n          {material.map((e, i) => (\n            <div className=\"materials\">\n              <div className=\"materials-title\">{i}</div>\n              <div className=\"materials-item\">{e.firstStakan}</div>\n              <div className=\"materials-item\">{e.secondStakan}</div>\n            </div>\n            ))}\n        </div>\n        <div className=\"workspace-result\">\n          <Button type=\"primary\" onClick={getResult}>\n            Get result\n          </Button>\n          <div className=\"result\">\n            <div className=\"row\">\n              {result.firstResult.map(e => (\n                <div className={`result-item ${e ? 'green' : 'red'}`}>\n                  {e ? '+' : '-'}\n                </div>\n              ))}\n            </div>\n            <div className=\"row\">\n              {result.secondResult.map(e => (\n                <div className={`result-item ${e ? 'green' : 'red'}`}>\n                  {e ? '+' : '-'}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}